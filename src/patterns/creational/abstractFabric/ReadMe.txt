Шаблон: Абстрактная фабрика (Abstract Factory)
=======================================================================================================
Цель:

Создание интерфейса, для создания множества взаимосвязанных или взаимозависимых объектов, без жёсткой
привязке к конкретным классам.

=======================================================================================================

Для чего используется:

Для создания множеств взаимосвязанных объектов.

=======================================================================================================
Пример использования:

- система не должна зависеть от метода создания, компоновки и представления входящих в неё объектов;
- входящие взаимосвязанные объекты должны использоваться вместе;
- система должна конфигурироваться одним из множеств объектов, из которых она состоит;
- нам необходимо предоставить множество объектов, раскрывая только их интерфейсы но не реализацию.

=======================================================================================================


Template: Abstract Factory
================================================= ================================================= ===
Target:

Creating an interface to create a set of interconnected or interdependent objects, without a rigid
binding to specific classes.

================================================= ================================================= ===

What is used for:

To create sets of interconnected objects.

================================================= ================================================= ===
Usage example:

- the system should not depend on the method of creation, arrangement and presentation of the objects included in it;
- incoming interconnected objects should be used together;
- the system must be configured by one of the sets of objects of which it consists;
- we need to provide a lot of objects, exposing only their interfaces but not their implementation.

================================================= ================================================= ===

Допустим, нам нужно создавать не отдельный объект класса как паттерне фабрика, а целое семейство
1) У нас есть набор интерфейсов (которые будут имплементировать сами классы(ослабляем зависимость))
2) и интерфейс Factory c методами, которые возвращают тип интерфейса //Developer getDeveloper();
3) На проект на каждый интерфейс создается класс, включая фабрику. Фарика имплементирует фабрику, классы интерфейсы
4) В клиенте создается тип интерфейс фабрики и приравнивается классу нужной фабрики
            ProjectTeamFactory projectTeamFactory = new BankingTeamFactory();
5) Создается тип интерфейс класса и приравнивается созданной фабрике с выозовом метода
            Developer developer = projectTeamFactory.getDeveloper();
            Tester tester = projectTeamFactory.getTester();
                     Связанность работает через интерфесы (-слева интефейс фабрики, справа нужная фабрика
                                                           -слева интерфейс, справа фабрика+метод)
