Инкапсулирование запроса в объект

Encapsulating a Request in an Object

У нас есть база данных с методами(insert, delete, select,update), мы создаем отдельный класс на каждый запрос БД.
Общийинтерфейс просто инициирует запуск команды.

В каждом классе присутствует сама база данных и конструктор с ее инициализацией,
а метод интерфейса реализует соответстующий запрос БД

В классе Developer создаются сами команды с общим конструктором,
и на каждую команду свой метод
public void insertRecord(){
        insert.execute();       //execute это метод интерфейса Command
    }

В клиенте создаём Девелопера, которые в конструкторе принимает объекты всех комманд

Вы заходите в ресторан и садитесь у окна. К вам подходит вежливый официант и принимает заказ, записывая все пожелания
в блокнот. Откланявшись, он уходит на кухню, где вырывает лист из блокнота и клеит на стену. Далее лист оказывается
в руках повара, который читает содержание заказа и готовит заказанные блюда.

В этом примере вы являетесь отправителем, официант с блокнотом — командой, а повар — получателем. Как и в паттерне,
вы не соприкасаетесь напрямую с поваром. Вместо этого вы отправляете заказ с официантом, который самостоятельно
«настраивает» повара на работу. С другой стороны, повар не знает, кто конкретно послал ему заказ. Но это ему безразлично,
так как вся необходимая информация есть в листе заказа.